"""
Django settings for letraz_server project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import socket
from pathlib import Path
from dotenv import load_dotenv
import os

from letraz_server.conf.loggerConfig import LoggingConfig
from letraz_server.contrib.settings_logger import get_settings_logger

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Settings logger - startup_errors.log
logger = get_settings_logger(BASE_DIR=BASE_DIR, filename='Letraz_startup_errors.log')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m61^t*5a2ko%+2skdm+(m*43xy099mixy50v$r1b=)$+s^r*#d'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(str(os.environ.get('ENV')).strip() == 'DEV')

ALLOWED_HOSTS = []
try:
    ALLOWED_HOSTS.append(socket.gethostbyname(socket.gethostname()))
    ALLOWED_HOSTS.append(socket.gethostbyname(socket.getfqdn()))
except Exception as ex:
    print('Encountered error while adding host\'s IP address/domain from socket: \n', ex)

ALLOWED_HOSTS += list(filter(None, os.environ.get('ALLOWED_HOSTS', '').split(';')))

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Django Rest Framework
    'rest_framework',
    # Cors header
    "corsheaders",

    # Apps
    'CORE.apps.CoreConfig',
    'JOB.apps.JobConfig',
    'RESUME.apps.ResumeConfig',
    'PROFILE.apps.ProfileConfig'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Cors header
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

CORS_ALLOWED_ORIGINS = []
CORS_ALLOWED_ORIGINS += list(filter(None, os.environ.get('CORS_ALLOWED_ORIGINS', '').split(';')))
CSRF_TRUSTED_ORIGINS = []
CSRF_TRUSTED_ORIGINS += list(filter(None, os.environ.get('CSRF_TRUSTED_ORIGINS', '').split(';')))

ROOT_URLCONF = 'letraz_server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'letraz_server.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True

PROJECT_NAME = 'Letraz'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static'
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Logging Configuration
LOGGING = LoggingConfig(Path(
    os.environ.get('LOG_FOLDER')) if os.environ.get('LOG_FOLDER') else BASE_DIR / 'logs', log_file_initial=PROJECT_NAME
                        ).get_config()
